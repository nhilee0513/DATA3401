{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## More ch4"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [],
   "source": [
    "# the usual starting block\n",
    "# added pandas\n",
    "import numpy as np \n",
    "%matplotlib inline   \n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "plt.style.use('fivethirtyeight')\n",
    "import math\n",
    "from scipy import stats\n",
    "import pandas as pd\n",
    "\n",
    "from IPython.core.interactiveshell import InteractiveShell\n",
    "InteractiveShell.ast_node_interactivity = 'all'  \n",
    "# asking jupyter to show all output on execution, not just the final value\n",
    "# other options:  instead of \"all\"  use \"last_expr\" or \"none\""
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Read file1 to use for examples"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>carname</th>\n",
       "      <th>mpg</th>\n",
       "      <th>cyl</th>\n",
       "      <th>disp</th>\n",
       "      <th>hp</th>\n",
       "      <th>drat</th>\n",
       "      <th>wt</th>\n",
       "      <th>qsec</th>\n",
       "      <th>vs</th>\n",
       "      <th>am</th>\n",
       "      <th>gear</th>\n",
       "      <th>carb</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>Mazda RX4</td>\n",
       "      <td>21.0</td>\n",
       "      <td>6</td>\n",
       "      <td>160.0</td>\n",
       "      <td>110</td>\n",
       "      <td>3.90</td>\n",
       "      <td>2.620</td>\n",
       "      <td>16.46</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>Mazda RX4 Wag</td>\n",
       "      <td>21.0</td>\n",
       "      <td>6</td>\n",
       "      <td>160.0</td>\n",
       "      <td>110</td>\n",
       "      <td>3.90</td>\n",
       "      <td>2.875</td>\n",
       "      <td>17.02</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>Datsun 710</td>\n",
       "      <td>22.8</td>\n",
       "      <td>4</td>\n",
       "      <td>108.0</td>\n",
       "      <td>93</td>\n",
       "      <td>3.85</td>\n",
       "      <td>2.320</td>\n",
       "      <td>18.61</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>Hornet 4 Drive</td>\n",
       "      <td>21.4</td>\n",
       "      <td>6</td>\n",
       "      <td>258.0</td>\n",
       "      <td>110</td>\n",
       "      <td>3.08</td>\n",
       "      <td>3.215</td>\n",
       "      <td>19.44</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>Hornet Sportabout</td>\n",
       "      <td>18.7</td>\n",
       "      <td>8</td>\n",
       "      <td>360.0</td>\n",
       "      <td>175</td>\n",
       "      <td>3.15</td>\n",
       "      <td>3.440</td>\n",
       "      <td>17.02</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "             carname   mpg  cyl   disp   hp  drat     wt   qsec  vs  am  gear  \\\n",
       "0          Mazda RX4  21.0    6  160.0  110  3.90  2.620  16.46   0   1     4   \n",
       "1      Mazda RX4 Wag  21.0    6  160.0  110  3.90  2.875  17.02   0   1     4   \n",
       "2         Datsun 710  22.8    4  108.0   93  3.85  2.320  18.61   1   1     4   \n",
       "3     Hornet 4 Drive  21.4    6  258.0  110  3.08  3.215  19.44   1   0     3   \n",
       "4  Hornet Sportabout  18.7    8  360.0  175  3.15  3.440  17.02   0   0     3   \n",
       "\n",
       "   carb  \n",
       "0     4  \n",
       "1     4  \n",
       "2     1  \n",
       "3     1  \n",
       "4     2  "
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# read file1 to use for example data\n",
    "dat1 = pd.read_csv('file1')\n",
    "dat1.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### it's nice to keep this handy because you never know when you might feel like dropping in an image\n",
    "xxxx![this guy](highest_avg_gross.jpg)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<img src=\"highest_avg_gross.jpg\" style=\"width:100px;height:200px\"/>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Functions in python -- the basic template\n",
    "Python functions have this structure: \n",
    "\n",
    "**def** *functionname*(arg1, arg2, ...)**\\:** <br>\n",
    "&ensp;&ensp;&ensp;    \"\"\" docstring \"\"\" <br>\n",
    "&ensp;&ensp;&ensp;        code<br>\n",
    "&ensp;&ensp;&ensp;        more code <br>\n",
    "&ensp;&ensp;&ensp;        ...<br>\n",
    "&ensp;&ensp;&ensp;        excellent code <br>\n",
    "&ensp;&ensp;&ensp;        *value* = ... <br>\n",
    "&ensp;&ensp;&ensp;        **return** *value*<br>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The image below was sourced from *InferentialThinking.com*, the textbook for a UC Berkeley data science course. \n",
    "\n",
    "\n",
    "<img src=\"/function_definition.jpg\" style=\"width:800px;height:600px\"/>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "\n",
    "## Example:  write a function to make python's unif.rvs() function work like R's runif()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "def myrunif(n, a, b ):\n",
    "    \"\"\" reparameterizing python's uniform random number generator \n",
    "        to make it behavelike R's runif() function\n",
    "        n = number of random numbes to generate\n",
    "        a,b = left and right boundaries of uniform dist\n",
    "    \"\"\"\n",
    "    leftboundary  = a\n",
    "    width  = b - a\n",
    "    val = stats.uniform.rvs(loc = leftboundary, scale = width, size = n)\n",
    "    return val \n",
    "\n",
    "stats.uniform?"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## test the function"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([0.76911625, 0.62173856, 0.2792904 , 0.19740627, 0.33076324])"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "text/plain": [
       "array([17.85579823, 15.24365086, 17.29987415, 14.13513901, 19.91091462])"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "text/plain": [
       "0.004899047839246329"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "text/plain": [
       "99.99999013305737"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "myrunif(5,0,1)\n",
    "myrunif(5, 10, 20)\n",
    "myrunif(5000, 0, 100).min()\n",
    "bigvec = myrunif(5000000, 0, 100)\n",
    "bigvec.max()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## one test to rule them all "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>0</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>count</td>\n",
       "      <td>5.000000e+06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>mean</td>\n",
       "      <td>4.999240e+01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>std</td>\n",
       "      <td>2.887821e+01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>min</td>\n",
       "      <td>1.008135e-05</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>25%</td>\n",
       "      <td>2.498246e+01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>50%</td>\n",
       "      <td>4.996735e+01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>75%</td>\n",
       "      <td>7.501528e+01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>max</td>\n",
       "      <td>9.999996e+01</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                  0\n",
       "count  5.000000e+06\n",
       "mean   4.999240e+01\n",
       "std    2.887821e+01\n",
       "min    1.008135e-05\n",
       "25%    2.498246e+01\n",
       "50%    4.996735e+01\n",
       "75%    7.501528e+01\n",
       "max    9.999996e+01"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "out  = pd.DataFrame(bigvec).describe()\n",
    "out"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## scientific notation, no thanks, so ..."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>0</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>count</td>\n",
       "      <td>5000000.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>mean</td>\n",
       "      <td>49.99</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>std</td>\n",
       "      <td>28.88</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>min</td>\n",
       "      <td>0.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>25%</td>\n",
       "      <td>24.98</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>50%</td>\n",
       "      <td>49.97</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>75%</td>\n",
       "      <td>75.02</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>max</td>\n",
       "      <td>100.00</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                0\n",
       "count  5000000.00\n",
       "mean        49.99\n",
       "std         28.88\n",
       "min          0.00\n",
       "25%         24.98\n",
       "50%         49.97\n",
       "75%         75.02\n",
       "max        100.00"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pd.DataFrame(bigvec).describe().apply(lambda s: s.apply(lambda x: format(x, '.2f')))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>0</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>5.000000e+06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>4.999238e+01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>2.886021e+01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>3.707387e-05</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>2.499561e+01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>5.000351e+01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>7.496995e+01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>9.999999e+01</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                  0\n",
       "count  5.000000e+06\n",
       "mean   4.999238e+01\n",
       "std    2.886021e+01\n",
       "min    3.707387e-05\n",
       "25%    2.499561e+01\n",
       "50%    5.000351e+01\n",
       "75%    7.496995e+01\n",
       "max    9.999999e+01"
      ]
     },
     "execution_count": 43,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "stats.beta.rvs(5, 2, size =1)\n",
    "stats.uniform.pdf?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "plt.ylim(top = 4)\n",
    "x = .406  \n",
    "h = .2\n",
    "xvec=np.arange(-0.2,1.2,0.001)\n",
    "yvec=stats.uniform.pdf(xvec, x-h, 2*h) \n",
    "# parameters (xvalues, loc = left boundary, scale = width )\n",
    "plt.plot(xvec, yvec, c='orangered')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Ellipsis"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "### now write the same code as a function\n",
    "### inputs are x and h\n",
    "### function name = putaboxonit\n",
    "### calling putaboxonit(.406, .2) should produce same plot as above\n",
    "### function doesn't have to return anything, but it can\n",
    "### NO I TAKE THAT BACK ...\n",
    "### your function should return yvec\n",
    "### add inputs for top, color, etc. if you want \n",
    "..."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 89,
   "metadata": {},
   "outputs": [],
   "source": [
    "def putaboxonit(x, h):\n",
    "    xvec= np.arange(0-h,1+h,0.01) #-h is left side of x, 1+h is right, \n",
    "    yvec = stats.uniform.pdf(xvec, x-h, 2*h) #Height\n",
    "    #plt.ylim(top = yvec.max()+2)\n",
    "    t = 1.66 * (1/(2*h))\n",
    "    plt.ylim(top = t)\n",
    "    plt.plot(xvec, yvec, c= \"blue\") \n",
    "    return yvec"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 73,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([0., 0., 0., ..., 0., 0., 0.])"
      ]
     },
     "execution_count": 73,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "putaboxonit(.406,.2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 68,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([0.27803013])"
      ]
     },
     "execution_count": 68,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "x = stats.beta.rvs(5,2,size = 1)\n",
    "x"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 69,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([0., 0., 0., ..., 0., 0., 0.])"
      ]
     },
     "execution_count": 69,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "putaboxonit(x, .2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 70,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([0., 0., 0., ..., 0., 0., 0.])"
      ]
     },
     "execution_count": 70,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAZIAAAEJCAYAAAC+I6F6AAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4xLjEsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy8QZhcZAAAWTElEQVR4nO3de2zV9f3H8VctFlGEzqYtbALdShEKYRaXQkVHpOkQzMLcsinRbDoUOqsbUUAgDkUhgJ0MrQ6B2s1NkoGjCILuhjAubVcyIUNc46EOJ3Mto7NjRS4Wzu+P/ahrQc7l23PO97w/z0fCHz09tu9XmpzX+3PO+R5TWltbgwIAIEqXJHoAAEByo0gAAJ5QJAAATygSAIAnFAkAwBOKBADgCUUCAPCEIgEAeEKRSAoEAokeIebIaAMZbbCWkSIBAHgSskjOnDmjhQsXauTIkcrOztbIkSO1cOFCtbe3x2M+AIDP9Qh1h+XLl6uyslIrVqxQfn6+Dhw4oO9973tKS0vT7Nmz4zEjAMDHQhZJfX29br75Zk2cOFGSNGjQIE2cOFF/+tOfYj4cAMD/Qj61NWbMGO3atUvvvPOOJKmhoUE7d+5USUlJzIcDAPhfSqiPkQ8Gg1q4cKGWLVum1NRUtbe3a+bMmXrkkUcu+oOtvSsBAFyVl5d30e+HfGqrurpav/zlL1VZWamhQ4dq//79mjNnjgYOHKhvf/vbUf9iPwkEAkk1bzTIaAMZbbCWMWSRzJ8/X/fff7++8Y1vSJKGDx+u999/Xz/+8Y8vWiQAADeEfI3ko48+UmpqaqfbUlNTdfbs2ZgNBQBIHiFPJDfffLOWL1+uQYMGaejQofrzn/+s5557Trfffns85gMA+FzIInnyySe1aNEiPfTQQzp69Kiys7P1ne98h2tIAACSwiiSK6+8UkuWLNGSJUviMQ8AIMnwWVsAAE8oEgCAJxQJAMATigQA4AlFAgDwhCIBAHhCkQAAPKFIAACeUCQAAE8oEgCAJxQJAMATigQA4AlFAgDwhCIBAHhCkQAAPKFIAACeUCQAAE8oEgCAJxQJAMATigQA4AlFAgDwhCIBAHhCkQAAPKFIAACeUCQAAE8oEgCAJxQJAMATigQA4AlFAgDwhCIBAHhCkQAAPKFIAACeUCQAAE8oEgCAJxQJAMATigQA4AlFAgDwhCIBAHhCkQAAPKFIAACeUCQAAE8oEgCAJxQJAMATigQA4AlFAgDwJKwiaWpqUmlpqXJzc5Wdna3Ro0dr165dsZ4NAJAEeoS6Q2trqyZMmKAxY8Zo3bp1ysjI0HvvvafMzMx4zAcA8LmQRfLMM8+oX79+WrlyZcdtOTk5sZwJAJBEQj61tWXLFl133XW6++67NXjwYN1www1atWqVgsFgPOYDAPhcyCI5dOiQXnjhBeXk5Gj9+vUqLS3VggULtHr16njMBwDwuZTW1taLHi0yMzNVUFCg3/72tx23Pf7449q8ebPq6+s/9b8LBALdNyUAIGHy8vIu+v2Qr5FkZ2frmmuu6XTbkCFDdPjwYU+/2E8CgUBSzRsNMtpARhusZQz51NaYMWN08ODBTrcdPHhQAwYMiNlQAIDkEbJI7rvvPu3Zs0c/+tGP9O677+qVV17RqlWrdM8998RjPgCAz4UsklGjRmnNmjXasGGDioqK9MQTT2jevHkUCQBAUhivkUjShAkTNGHChFjPAgBIQnzWFgDAE4oEAOAJRQIA8IQiAQB4QpEAADyhSAAAnlAkAABPKBIAgCcUCQDAE4oEAOAJRQIA8IQiAQB4QpEAADyhSAAAnlAkAABPKBIAgCcUCQDAE4oEAOAJRQIA8CSs/2c7ksPRoyk6ePDCu8Hhw73V0pIa54m6X0qKNGzYGfXpk+hJAJxDkRixdu2lKi3tpWAw5VPuMTSu88RSr15B/epXxzV27JlEjwJAPLVlxvLlPS9SIracOJGiFSt6JnoMAP+PIjGipcWNEjnHtbyAn/HUlhHBYOevCwralZb2ydcnTpxUr16XxXeobnTsWIr+8pfkf40HsIgiMWrt2o+UlfVJuwQCAeXl5SVwIm9qalI1aVLvRI8B4AJ4asuIricS61zLC/gZRWJUirGXEKzlASyhSIxwbUN3LS/gZxSJUdY2eGt5AEsoEiNc29Bdywv4GUVilLUN3loewBKKxAjXNnTX8gJ+RpEYZW2Dt5YHsIQiMcK1Dd21vICfUSRGWdvgreUBLKFIjHDlk3/P4UQC+AdFYlRKiq1HWk4kgH9RJEa4tqG7lhfwM4oESYETCeBfFAmSEicSwD8oEqOsbfDW8gCWUCRGuLahu5YX8DOKxIiuD6zWNviueVx7uzPgZxSJUfaKhCMI4FcUiRGuPdXjWl7AzygSo6ydSAD4V8RF8tRTTyk9PV2zZs2KxTyIkmsbumt5AT+LqEj27NmjF198UcOHD4/VPOgm1k4k1vIAloRdJP/+97917733qqKiQunp6bGcCVFwbUN3LS/gZ2EXyYwZMzR58mSNGzculvOgm1jb4K3lASzpEc6dXnzxRb377rtauXJl2D84EAhEPVQiJNu8XZ09O0rSJ4+2jY2Nuuyys53uk8wZ//a3XpI+eUr11KlTF8yTzBnDRUYbkiljXl7eRb8fskgCgYAef/xxvf7660pLS+u2X+wngUAgqea9kJQuK/vgwbnq1euTr5M948mTnQ/PaWk9z8uT7BnDQUYbrGUMWST19fVqaWlRUVFRx21nzpxRTU2Nqqqq9MEHH6hnz54xHRKhufaagWt5AT8LWSS33HKLCgoKOt1WVlam3NxcPfjggxGdUhA/1l5TsJYHsCRkkaSnp5/3Lq3LL79cn/nMZ5Sfnx+zwRAZNnQAicKV7UZZ2+Ct5QEsCetdW11t2bKlu+eAR66dSFzLC/gZJxKjrG3w1vIAllAkRri2obuWF/AzisQoaxu8tTyAJRSJEa5t6K7lBfyMIjHK2gZvLQ9gCUVihGsbumt5AT+jSIyytsFbywNYQpEY4dqG7lpewM8oEqOsbfDW8gCWUCRGBINuPdJyIgH8gyIxytoG3zUPRQL4B0VilPUiAeAfFIkBLm7nLmYG/IoiQVLgRAL4F0VigIvbuYuZAb+iSAxKSbH3KMuJBPAvisQAF7dzFzMDfkWRGGRxe7eYCbCCIjHAxe3ctQswAT+jSAyyuL1bfN0HsIIiMcDNE0miJwBwDkVikMUTCQD/okgMcHE7dzEz4FcUiUEWTyQWMwFWUCQGuLidu5gZ8CuKxCCL27vFTIAVFIkBbOcAEokiMcji9m4xE2AFRWKAiycSFzMDfkWRGGRxe7eYCbCCIjHAxe3cxcyAX1EkBlnc3i1mAqygSAxwcTt3MTPgVxSJQRa3d4uZACsoEgO6bucWH3S7ZuJEAvgHRWKAiw+qLmYG/IoiMciFEwkA/6BIDHBxO3cxM+BXFIlBFrd3i5kAKygSA1zczl3MDPgVRWKQxe3dYibACorEABe3cxczA35FkSApcCIB/IsiQVLiRAL4B0VikMXt3WImwIqQRbJs2TLddNNNGjBggHJzc3Xbbbfp7bffjsdsCFMw6N6jLCcSwD9CFsmuXbs0depU/eY3v9GmTZvUo0cPfe1rX9OHH34Yj/kQhZQUe4+ynEgA/+oR6g7V1dWdvl65cqUGDhyouro6TZw4MWaDIXwubucuZgb8KuLXSNra2nT27Fmlp6fHYh50A4vbu8VMgBUpra2tEe12d911lxobG7V9+3alpqZ+6v0CgYDn4RCe1tYeKim5tuPrvn3b9fvf70vgRN2vtTVVJSUFHV/36dOurVttZQT8Ki8v76LfD/nU1v+aN2+e6urq9Otf//qiJRLOL/aTQCCQVPN21dLSeV1PTb3kvDzJnvHDDztnvOQSexnDQUYbrGUMu0jmzp2r6upqvfrqq8rJyYnhSIiUi68XuPhONcCvwiqShx9+WNXV1dq8ebOGDBkS65ngkcXXEyy+Ew2wImSRzJw5U2vXrtVLL72k9PR0NTc3S5KuuOIK9e7dO+YDIjQ3TySJngDAOSHftVVZWan//Oc/mjx5sq655pqOfxUVFfGYD1GweCIB4F8hTyStra3xmAMesJ0DSCQ+a8sgiycSi5kAKygSA1w8kbiYGfArisQgi9u7xUyAFRSJAV23c4sPul0zcSIB/IMiMcDFB1UXMwN+RZEY5MKJBIB/UCQGuLidu5gZ8CuKxCCL27vFTIAVFIkBLm7nLmYG/IoiMcji9m4xE2AFRWKAi9u5i5kBv6JIDLK4vVvMBFhBkRjg4nbuYmbArygSgyxu7xYzAVZQJAa4uJ27mBnwK4oESYETCeBfFIkBLm7nLmYG/IoiMcji9m4xE2AFRWKAi9u5i5kBv6JIDLK4vVvMBFhBkSApcSIB/IMiMcji9m4xE2AFRWJAMOjeoywnEsA/KBKDUlLsPcpyIgH8iyIxwMXt3MXMgF9RJAZZ3N4tZgKsoEgM6LqdW3zQ7ZrJxdeFAL+iSAAAnlAkBrh4IgHgHxSJAa6+8OxqbsBvKBKD2N4BxBNFYoCrm7mruQG/oUgMsnoisXihJWABRWKAq5u5q7kBv6FIDLJ7Ikn0BAAuhCIxwNXN3NXcgN9QJAZZ3dyt5gKSHUVigKubuau5Ab+hSAyyurlbzQUkO4rEAFc3c1dzA35DkRhkdXO3mgtIdhSJAa5u5q7mBvyGIjHI6uZuNReQ7CgSA1zdzF3NDfgNRYKkwYkE8Kewi6SyslIjR45Udna2xo0bp5qamljOhQi4upm7mhvwm7CKpLq6WnPmzNFDDz2kHTt2qLCwUN/85jf1/vvvx3o+RMHq5m41F5DsUlpbW0PudcXFxRo+fLieeeaZjttGjRqlyZMn69FHH+3WgWpqUvX00z279WeGcvz4cV1xxRVx/Z3d6dixFNXW9uj4evjwM9q9u63TfQKBgPLy8uI9Wrfq16+PTp78pE1KSj7WJf+zCiX73zEcZLQh3hlnzDiloqIzMfv5PULd4fTp09q3b58eeOCBTrePHz9ef/zjH7t9oOuvP6Prr/+o23/uxaVIivfvjK9kLxFJamo6FuIe9v+OZLTCVsaQT221tLTozJkzyszM7HR7Zmamjhw5ErPBAADJIewX21O6PEEdDAbPuw0A4J6QRZKRkaHU1NTzTh9Hjx4975QCAHBPyCJJS0vTtddeq23btnW6fdu2bRo9enTMBgMAJIeQL7ZLUllZmaZPn67rrrtOo0ePVlVVlZqamnT33XfHej4AgM+F9RrJ17/+dS1evFjl5eW68cYbVVdXp3Xr1mngwIGxnq9bRHox5a5duzRu3DhlZ2fri1/8oqqqquI0afQiybhp0ybdeuutys3N1dVXX63i4mK99tprcZw2OtFeFFtbW6uMjAwVFRXFeELvIs14+vRpLVq0SCNHjlRWVpZGjBih559/Pk7TRifSjC+//LJuuOEG9e/fX0OGDNG0adPU3Nwcp2kjs3v3bt1+++0aNmyY0tPTtWbNmpD/zYEDBzRp0iT169dPw4YN09KlSxVMsqttw36x/Z577tH+/ft15MgR/eEPf9DYsWNjOVe3ifRiykOHDulb3/qWCgsLtWPHDj344IOaPXu2Nm7cGOfJwxdpxt27d+vLX/6y1q1bpx07dqikpER33nmnrz+tINqLYltbW1VaWqpx48bFadLoRZNx6tSp2rp1q55++mnt2bNHP/vZzzR8+PA4Th2ZSDPW1dVp+vTpmjJlimpra7VmzRo1NDTo3nvvjfPk4Tl+/Ljy8/O1ZMkS9erVK+T9jx07pltvvVVZWVl64403tGTJElVUVOjZZ5+Nw7TdJ6wLEpNZpBdTPvroo3r11Vf15ptvdtz2wAMPqKGhQb/73e/iMnOkuuOC0fHjx6uoqEiLFi2K1ZieRJvxzjvv1IgRIxQMBrVp0ybV1tbGY9yoRJrxjTfe0F133aW9e/cqIyMjnqNGLdKMFRUVWrlypd56662O21566SU9/PDD+vvf/x6XmaP1uc99Tk8++aTuuOOOT73PCy+8oMcee0zvvPNOR/GUl5erqqpKb7/9dtK8M9b0hzaeu5hy/PjxnW6/2MWU9fX1592/uLhYe/fu1ccffxyzWaMVTcYLaWtrU3p6eneP1y2izVhZWakjR45o1qxZsR7Rs2gybtmyRQUFBXruueeUn5+vUaNGafbs2Wpra7vg/RMtmoyjR49Wc3OzXn/9dQWDQbW0tKi6ulolJSXxGDnm6uvrVVRU1On0UlxcrH/84x967733EjhZZEwXSTQXUx45cuSC929vb1dLS0vMZo1Wd1wwunr1an3wwQe67bbbYjGiZ9FkPHDggJYuXapVq1YpNTU1HmN6Ek3GQ4cOqa6uTm+99ZZ+/vOfq7y8XFu3btV9990Xj5EjFk3GwsJCVVZWatq0acrMzFRubq6CwaBWrFgRj5Fj7tMeb859L1mYLpJzIr2Y8kL3v9DtfhLtBaMbN27U/PnztWrVKt+/eSLcjKdOndLUqVP1xBNPKCcnJ07TdY9I/o5nz55VSkqKVq9erS996UsqLi5WeXm5Nm3a5OsHoUgyNjQ0aM6cOZo1a5a2b9+u9evXq7m5WTNmzIjHqHGRjI83XYX19t9kFc3FlFlZWRe8f48ePXTVVVfFbNZoeblgdOPGjSotLdXzzz+vSZMmxXJMTyLN2NTUpIaGBpWVlamsrEzSfx90g8GgMjIy9PLLL5/39EqiRfN3zM7OVv/+/dW3b9+O24YMGSJJOnz4sLKysmI3cBSiybhs2TKNGjVK3//+9yVJI0aM0OWXX66JEyfqhz/8oa6++uqYzx1Ln/Z4IympLvg2fSKJ5mLKwsJCbd++/bz7FxQU6NJLL43VqFGL9oLRDRs2aPr06frJT36iyZMnx3pMTyLN+NnPflY1NTXauXNnx7/vfve7+sIXvqCdO3eqsLAwXqOHLZq/45gxY9TU1NTpNZHGxkZJ0oABA2I3bJSiyXjixInznpo893WyvUX2QgoLC1VbW6uTJ0923LZt2zb1799fgwYNSuBkkUmdM2fOY4keIpauvPJKLV68WP369dNll12m8vJy1dTU6Nlnn1Xfvn01ffp0bd68WV/96lclSZ///Oe1fPly/fOf/9SAAQP02muv6amnntLChQs1dOjQBKe5sEgzrl+/XtOmTdOCBQv0la98RcePH9fx48f18ccfh/WWxUSIJGNqaqoyMzM7/XvzzTfV2NiouXPnKi0tLdFxLijSv+PgwYO1Zs0a7du3T0OHDlVjY6NmzZqlsWPHXvSdQokUacYTJ06ooqJCGRkZuuqqqzqe6srOztYPfvCDBKc5X1tbmxoaGtTc3Kxf/OIXys/PV58+fXT69Gn17dtXCxYs0LJlyzRlyhRJUm5urn76059q//79ysvLU21trebPn68ZM2Yk1SeHmH5qS/rvxZT/+te/VF5erubmZg0bNqzTxZSHDx/udP+cnBytW7dO8+bNU1VVlfr166elS5f6emuPNGNVVZXa29s1d+5czZ07t+P2sWPHasuWLXGdPVyRZkxGkWbs3bu3XnnlFc2ePVvjx49Xenq6brnllm7/fwR1p0gz3nHHHWpra9Pq1av1yCOPqE+fPrrxxhu1YMGCRIwf0t69eztKUJIWL16sxYsXa8qUKVqxYoWampr017/+teP7ffv21YYNGzRz5kzddNNNSk9PV1lZme6///5EjB8189eRAABiy/RrJACA2KNIAACeUCQAAE8oEgCAJxQJAMATigQA4AlFAgDwhCIBAHhCkQAAPPk/spBn54ATxzUAAAAASUVORK5CYII=\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "putaboxonit(x,.1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 71,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([0., 0., 0., ..., 0., 0., 0.])"
      ]
     },
     "execution_count": 71,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "putaboxonit(x/2, .2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 88,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "numpy.ndarray"
      ]
     },
     "execution_count": 88,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "text/plain": [
       "array([0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. ,\n",
       "       0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. ,\n",
       "       0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 2.5, 2.5, 2.5, 2.5, 2.5,\n",
       "       2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5,\n",
       "       2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5,\n",
       "       2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 0. , 0. , 0. , 0. ,\n",
       "       0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. ,\n",
       "       0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. ,\n",
       "       0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. ,\n",
       "       0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. ,\n",
       "       0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. ])"
      ]
     },
     "execution_count": 88,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "out = putaboxonit(.333,.2)\n",
    "type(out)\n",
    "out"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 106,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.8217873259835006"
      ]
     },
     "execution_count": 106,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "text/plain": [
       "0.5379391900454741"
      ]
     },
     "execution_count": 106,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "text/plain": [
       "0.9157653035930389"
      ]
     },
     "execution_count": 106,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "xdata = stats.beta.rvs(5,2,size = 8)\n",
    "xdata[0]\n",
    "xdata[1]\n",
    "xdata[2]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 91,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. ,\n",
       "       0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. ,\n",
       "       0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. ,\n",
       "       0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. ,\n",
       "       0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. ,\n",
       "       2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5,\n",
       "       2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5,\n",
       "       2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5,\n",
       "       2.5, 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. ,\n",
       "       0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. ,\n",
       "       0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. ])"
      ]
     },
     "execution_count": 91,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "putaboxonit(xdata[0], .2)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Make an array yout"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 116,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "yout  = putaboxonit(xdata[0], .2)\n",
    "yout += putaboxonit(xdata[1], .2)\n",
    "yout += putaboxonit(xdata[2], .2)\n",
    "yout += putaboxonit(xdata[3], .2)\n",
    "yout += putaboxonit(xdata[4], .2)\n",
    "yout += putaboxonit(xdata[5], .2)\n",
    "yout += putaboxonit(xdata[6], .2)\n",
    "yout += putaboxonit(xdata[7], .2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 108,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[<matplotlib.lines.Line2D at 0x1a20ca3890>]"
      ]
     },
     "execution_count": 108,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "xvec= np.arange(-0.2, 1.2, 0.01)\n",
    "plt.plot(xvec, yout, c = \"orangered\") "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Area above is equal to 8. How can we make area equal to 1? "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 111,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[<matplotlib.lines.Line2D at 0x1a2100b550>]"
      ]
     },
     "execution_count": 111,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Scale by dividing by 8 which is the number of elements\n",
    "xvec= np.arange(-0.2, 1.2, 0.01)\n",
    "plt.plot(xvec, 1/len(xdata)*yout, c = \"orangered\") "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 113,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[<matplotlib.lines.Line2D at 0x1a2909cd10>]"
      ]
     },
     "execution_count": 113,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "text/plain": [
       "<matplotlib.collections.PathCollection at 0x1a262151d0>"
      ]
     },
     "execution_count": 113,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Crank out 8 data points\n",
    "xvec= np.arange(-0.2, 1.2, 0.01)\n",
    "plt.plot(xvec, 1/len(xdata)*yout, c = \"orangered\") \n",
    "plt.scatter(xdata,np.zeros(8)) "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 115,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[<matplotlib.lines.Line2D at 0x1a20d54c10>]"
      ]
     },
     "execution_count": 115,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "text/plain": [
       "<matplotlib.collections.PathCollection at 0x1a20f860d0>"
      ]
     },
     "execution_count": 115,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "text/plain": [
       "[<matplotlib.lines.Line2D at 0x1a20f86390>]"
      ]
     },
     "execution_count": 115,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#We want the beta pdf\n",
    "xvec= np.arange(-0.2, 1.2, 0.01)\n",
    "plt.plot(xvec, 1/len(xdata)*yout, c = \"orangered\") \n",
    "plt.scatter(xdata,np.zeros(8))\n",
    "plt.plot(xvec, stats.beta.pdf(xvec, 5, 2))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.4"
  },
  "latex_envs": {
   "LaTeX_envs_menu_present": true,
   "autoclose": true,
   "autocomplete": true,
   "bibliofile": "biblio.bib",
   "cite_by": "apalike",
   "current_citInitial": 1,
   "eqLabelWithNumbers": true,
   "eqNumInitial": 1,
   "hotkeys": {
    "equation": "Ctrl-E",
    "itemize": "Ctrl-I"
   },
   "labels_anchors": false,
   "latex_user_defs": false,
   "report_style_numbering": true,
   "user_envs_cfg": false
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
